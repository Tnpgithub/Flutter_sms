import 'controller/apply_leave_fill_controller.dart';import 'package:flutter/material.dart';import 'package:student_app/core/app_export.dart';import 'package:student_app/widgets/app_bar/appbar_image_2.dart';import 'package:student_app/widgets/app_bar/appbar_title.dart';import 'package:student_app/widgets/app_bar/custom_app_bar.dart';import 'package:student_app/widgets/custom_checkbox_button.dart';import 'package:student_app/widgets/custom_drop_down.dart';import 'package:student_app/widgets/custom_elevated_button.dart';import 'package:student_app/widgets/custom_text_form_field.dart';class ApplyLeaveFillScreen extends GetWidget<ApplyLeaveFillController> {const ApplyLeaveFillScreen({Key? key}) : super(key: key);

@override Widget build(BuildContext context) { mediaQueryData = MediaQuery.of(context); return SafeArea(child: Scaffold(resizeToAvoidBottomInset: false, body: SizedBox(width: double.maxFinite, child: Column(children: [Container(padding: EdgeInsets.symmetric(vertical: 21.v), decoration: AppDecoration.white, child: Column(mainAxisAlignment: MainAxisAlignment.center, children: [SizedBox(height: 4.v), CustomAppBar(leadingWidth: 44.h, leading: AppbarImage2(svgPath: ImageConstant.imgArrowleft, margin: EdgeInsets.only(left: 20.h, top: 3.v, bottom: 6.v), onTap: () {onTapArrowleftone();}), centerTitle: true, title: AppbarTitle(text: "lbl_apply_leave".tr))])), Container(padding: EdgeInsets.symmetric(horizontal: 20.h, vertical: 24.v), child: Column(crossAxisAlignment: CrossAxisAlignment.start, children: [CustomDropDown(icon: Container(margin: EdgeInsets.fromLTRB(30.h, 15.v, 16.h, 15.v), child: CustomImageView(svgPath: ImageConstant.imgArrowdown)), hintText: "lbl_casual_leave".tr, items: controller.applyLeaveFillModelObj.value.dropdownItemList.value, onChanged: (value) {controller.onSelected(value);}), SizedBox(height: 24.v), GestureDetector(onTap: () {onTapRowdate();}, child: Container(padding: EdgeInsets.symmetric(horizontal: 16.h, vertical: 15.v), decoration: AppDecoration.outlineGray.copyWith(borderRadius: BorderRadiusStyle.roundedBorder8), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [Padding(padding: EdgeInsets.only(top: 3.v), child: Obx(() => Text(controller.applyLeaveFillModelObj.value.date.value, style: theme.textTheme.bodyLarge))), CustomImageView(svgPath: ImageConstant.imgCalendarBlack900, height: 24.adaptSize, width: 24.adaptSize)]))), SizedBox(height: 24.v), Container(padding: EdgeInsets.symmetric(horizontal: 16.h, vertical: 15.v), decoration: AppDecoration.outlineGray.copyWith(borderRadius: BorderRadiusStyle.roundedBorder8), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [Padding(padding: EdgeInsets.only(top: 3.v), child: Text("lbl_13_sep_2023".tr, style: theme.textTheme.bodyLarge)), CustomImageView(svgPath: ImageConstant.imgCalendarBlack900, height: 24.adaptSize, width: 24.adaptSize)])), SizedBox(height: 24.v), CustomTextFormField(controller: controller.descriptionController, hintText: "msg_i_request_you_to".tr, textInputAction: TextInputAction.done, maxLines: 4), SizedBox(height: 24.v), Row(children: [Obx(() => CustomCheckboxButton(text: "lbl_half_day_leave".tr, value: controller.halfDayLeave.value, padding: EdgeInsets.symmetric(vertical: 1.v), onChange: (value) {controller.halfDayLeave.value = value;})), Obx(() => CustomCheckboxButton(text: "lbl_full_day_leave2".tr, value: controller.fullDayLeave.value, margin: EdgeInsets.only(left: 32.h), padding: EdgeInsets.symmetric(vertical: 1.v), textStyle: CustomTextStyles.titleSmallPrimary, onChange: (value) {controller.fullDayLeave.value = value;}))]), SizedBox(height: 5.v)]))])), bottomNavigationBar: CustomElevatedButton(text: "lbl_apply".tr, margin: EdgeInsets.only(left: 20.h, right: 20.h, bottom: 40.v), onTap: () {onTapApply();}))); }
/// Navigates to the homeContainerScreen when the action is triggered.

/// When the action is triggered, this function uses the [Get] package to
/// push the named route for the homeContainerScreen.
onTapApply() { Get.toNamed(AppRoutes.homeContainerScreen, ); } 


/// Navigates to the previous screen.
///
/// When the action is triggered, this function uses the [Get] package to 
/// navigate to the previous screen in the navigation stack.
onTapArrowleftone() { Get.back(); } 

/// Displays a date picker dialog and updates the selected date in the
/// [applyLeaveFillModelObj] object of the current [date] if the user 
/// selects a valid date.
///
/// This function returns a `Future` that completes with `void`.
Future<void> onTapRowdate() async  { DateTime? dateTime  = await showDatePicker(context: Get.context!,initialDate: controller.applyLeaveFillModelObj.value.selectedDate!.value , firstDate: DateTime(1970) ,lastDate: DateTime(DateTime.now().year,DateTime.now().month,DateTime.now().day)); if (dateTime != null) {controller.applyLeaveFillModelObj.value.selectedDate!.value = dateTime;controller.applyLeaveFillModelObj.value.date.value = dateTime.format(MEDIUM_DATE_FORMAT);} } 
 }
